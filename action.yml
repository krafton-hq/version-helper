name: 'version-helper'
description: 'setup and generate version using version-helper'
inputs:
  version:
    description: 'download version'
    required: false
    default: 'v0.8.7'
  counter:
    description: 'target counter'
    required: false
    default: 'redfox'
  debug:
    description: 'debug mode'
    required: false
    default: 'false'
  labels:
    description: 'append labels to version ex)aa=zz,bb=cc'
    required: false
    default: ''
  generate:
    description: 'generate version.yaml'
    required: false
    default: 'true'
  upload:
    description: 'upload version.yaml to redfox'
    required: false
    default: 'false'
outputs:
  version:
    description: 'version tag'
    value: ${{ steps.generate-version.outputs.version }}
runs:
  using: "composite"
  steps:
    - id: bin-cache
      uses: actions/cache@v4
      with:
        path: vhbin/versionhelper
        key: ${{ runner.os }}-versionhelper-${{ inputs.version }}

    - id: download-binary
      if: steps.bin-cache.outputs.cache-hit != 'true'
      run: |
        set -euox pipefail
        curl -L https://github.com/krafton-hq/version-helper/releases/download/${{ inputs.version }}/versionhelper_${{ inputs.version }}_linux_amd64.tar.gz --output versionhelper.tar.gz
        tar -xzf versionhelper.tar.gz
        mkdir -p vhbin
        sudo mv versionhelper vhbin/
        rm versionhelper.tar.gz
      shell: bash

    - id: save-cache
      if: steps.bin-cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: vhbin/versionhelper
        key: ${{ runner.os }}-versionhelper-${{ inputs.version }}

    - id: setup-binary
      run: |
        sudo mv vhbin/versionhelper /usr/local/bin/versionhelper
        versionhelper --version
      shell: bash

    - id: generate-version
      if: inputs.generate == 'true'
      run: |
        echo "version=$(versionhelper common --counter=${{ inputs.counter }} --debug=${{ inputs.debug }})" >> $GITHUB_OUTPUT
        cat version.yaml
      shell: bash

    - id: set-labels
      if: inputs.labels != ''
      run: |
        versionhelper version append --labels=${{ inputs.labels }} --debug=${{ inputs.debug }}
      shell: bash

    - id: upload-version
      if: inputs.upload == 'true'
      run: |
        versionhelper version upload --debug=${{ inputs.debug }}
      shell: bash
